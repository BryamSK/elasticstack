events {}

http {

    sendfile on;
    large_client_header_buffers 4 32k;

    upstream service {
        keepalive 32; # keepalive connections
        server kibana:5601;
    }
        map $http_upgrade $connection_upgrade {
                default upgrade;
                        '' close;
}

    server {
        listen 80;
        listen [::]:80;
        server_name service;

        location / {
            return 301 https://service.com;
        }
    }

    server {
        listen 443 ssl;
        server_name elkwin;

        ssl_certificate /etc/ssl/certs/file.crt;
        ssl_certificate_key /etc/ssl/private/file.key;
        ssl_protocols TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;

        location / {
                proxy_pass         https://kibana:5601;
                proxy_redirect     default;
                proxy_http_version 1.1;
        # Required for Jenkins websocket agents
                proxy_set_header   Connection        $connection_upgrade;
                proxy_set_header   Upgrade           $http_upgrade;
                proxy_set_header   Host              $host;
                proxy_set_header   X-Real-IP         $remote_addr;
                proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
                proxy_set_header   X-Forwarded-Proto $scheme;
                proxy_max_temp_file_size 0;
        #this is the maximum upload size
                client_max_body_size       10m;
                client_body_buffer_size    128k;
                proxy_connect_timeout      300;
                proxy_send_timeout         300;
                proxy_read_timeout         300;
                send_timeout               300;
                proxy_buffering            off;
                proxy_request_buffering    off; # Required for HTTP CLI commands
                proxy_set_header Connection ""; # Clear for keepalive

        }
    }
}
